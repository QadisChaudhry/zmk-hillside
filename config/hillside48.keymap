/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COLEMAK    0
#define QWERTY     1
#define NUMBERS    2
#define NAVIGATION 3
#define SYMBOLS    4
#define MISC       5

#define BBack LG(LBKT)
#define BForward LG(RBKT)
#define TabLeft LC(LS(TAB))
#define TabRight LC(TAB)
#define DLeft LC(LEFT)
#define DRight LC(RIGHT)
#define WordRight LA(RIGHT)
#define WordLeft LA(LEFT)
#define LineRight LG(RIGHT)
#define LineLeft LG(LEFT)
#define SS1 LS(LG(N4))
#define SS2 LS(LG(N5))
#define Monitors LS(LG(LA(LC(F))))

#define Copy LG(C)
#define Paste LG(V)

&lt {
    tapping-term-ms = <105>;
};
&sk {
    release-after-ms = <200>;
    quick-release;
};

/ {
        behaviors {
            hrm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <190>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
            cs: caps_shift {
                compatible = "zmk,behavior-tap-dance";
                label = "caps_shift";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&sk LSHFT>, <&caps_word>;
            };
        };

        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <NUMBERS NAVIGATION>;
                then-layer = <MISC>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                colemak {
                        bindings = <
    &kp TAB         &kp Q        &kp W       &kp F       &kp P        &kp B                       &kp J     &kp L              &kp U           &kp Y         &kp SEMI        &kp EQUAL
    &lt SYMBOLS ESC &kp A        &kp R       &kp S       &kp T        &kp G                       &kp M     &kp N              &kp E           &kp I         &kp O           &kp SQT
    &cs             &hrm LCTRL Z &hrm LALT X &hrm LGUI C &hrm LSHFT D &kp V &kp Paste    &kp UP   &kp K     &hrm LSHFT H       &hrm LGUI COMMA &hrm LALT DOT &hrm LCTRL FSLH &cs
                                      &trans &kp GRAVE &mo NUMBERS &kp BSPC &kp Copy     &kp DOWN &kp SPACE &lt NAVIGATION RET &kp DEL &trans
                        >;
                        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                qwerty {
                        bindings = <
   &kp TAB         &kp Q        &kp W       &kp E       &kp R        &kp T                       &kp Y &kp U        &kp I           &kp O         &kp P           &kp EQUAL
   &lt SYMBOLS ESC &kp A        &kp S       &kp D       &kp F        &kp G                       &kp H &kp J        &kp K           &kp L         &kp SEMI        &kp SQT
   &cs             &hrm LCTRL Z &hrm LALT X &hrm LGUI C &hrm LSHFT V &kp B &kp Paste    &kp UP   &kp N &hrm LSHFT M &hrm LGUI COMMA &hrm LALT DOT &hrm LCTRL FSLH &cs
                                     &trans &kp GRAVE &mo NUMBERS &kp BSPC &kp Copy     &kp DOWN &kp SPACE &lt NAVIGATION RET &kp DEL &trans
                        >;
                        sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
                };

                numbers {
                        bindings = <
   &trans &trans    &trans         &kp LBRC       &kp RBRC        &trans                  &trans    &kp N7 &kp N8 &kp N9 &kp STAR &kp EQUAL
   &trans &trans    &kp BSLH       &kp LPAR       &kp RPAR        &trans                  &kp DOT   &kp N4 &kp N5 &kp N6 &kp PLUS &kp MINUS
   &trans &kp LCTRL &hrm LALT PIPE &hrm LGUI LBKT &hrm LSHFT RBKT &trans &trans    &trans &kp COMMA &kp N1 &kp N2 &kp N3 &kp FSLH &trans
                                             &trans &trans &trans &trans &trans    &trans &trans &kp N0 &trans &trans
                        >;
                };

                navigation {
                        bindings = <
   &trans &trans    &kp C_PREV &kp C_PP     &kp C_NEXT   &trans                  &trans       &kp BBack    &kp TabLeft   &kp TabRight  &kp BForward &trans
   &trans &trans    &kp K_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans                  &kp LEFT     &kp DOWN     &kp UP        &kp RIGHT     &kp DLeft    &kp DRight
   &trans &kp LCTRL &kp LALT   &kp LGUI     &kp LSHFT    &trans &trans    &trans &kp LineLeft &kp WordLeft &kp WordRight &kp LineRight &trans       &trans
                                    &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans
                        >;
                };

                symbols {
                        bindings = <
   &trans &trans    &trans   &trans   &trans       &trans                  &trans &kp AMPS &kp STAR  &kp LPAR  &trans    &trans
   &trans &trans    &kp SS1  &kp SS2  &kp Monitors &trans                  &trans &kp DLLR &kp PRCNT &kp CARET &kp TILDE &kp UNDER
   &trans &kp LCTRL &kp LALT &kp LGUI &kp LSHFT    &trans &trans    &trans &trans &kp EXCL &kp AT    &kp HASH  &kp GRAVE &trans
                              &trans &trans &trans &trans &trans    &trans &trans &kp RPAR &trans &trans
                        >;
                };

                misc {
                        bindings = <
   &reset &bootloader &trans &trans &trans &trans                  &trans &trans      &trans     &trans &trans &trans
   &trans &trans      &trans &trans &trans &trans                  &trans &to COLEMAK &to QWERTY &trans &trans &trans
   &trans &trans      &trans &trans &trans &trans &trans    &trans &trans &trans      &trans     &trans &trans &trans
                      &trans &trans &trans &trans &trans    &trans &trans &trans &trans &trans
                        >;
                };
        };
};
